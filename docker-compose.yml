version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media:delegated
    environment:
      - DJANGO_SETTINGS_MODULE=logistic_crm.settings
      - DJANGO_SECRET_KEY=your-secret-key
      - DJANGO_DEBUG=True
      - DATABASE_URL=mysql://greatline_root:c64s6KPa@185.135.83.113:3306/logistic_crm
      - EMAIL_ENCRYPTION_KEY=jaj9qouzOs-ACsia3xikjwEvv9es_3lzoKF6Csei8-4=
    ports:
      - "8000:8000"
    networks:
      - app_network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    volumes:
      - ./frontend:/app:delegated
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://backend:8000/api
      - NODE_OPTIONS=--max-old-space-size=4096
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network
    deploy:
      resources:
        limits:
          memory: 4G
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - app_network
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  frontend_node_modules:

networks:
  app_network:
    driver: bridge 